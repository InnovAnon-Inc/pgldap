name: PostGreSQL-Enabled OpenLDAP
permissions:
  contents: write

on:
  schedule:
    - cron: '* * 1 * *'
  #[workflow_call]
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  build:
    name: build package
    runs-on: ubuntu-latest
    steps:
    - name: install build deps
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: >
          build-essential devscripts
          dpkg-dev fakeroot groff
        version: 1.0
    
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: "repo"

    - name: Build Deps
      run: |
        sudo sed -i 'p;s@^deb@&-src@' /etc/apt/sources.list
        sudo apt update
        sudo apt build-dep -y openldap
             apt source    -y openldap

    - name: Configure Environment
      run: |
        P="$(ls -d openldap-*+dfsg/)"
        echo "P=$P"                           >> $GITHUB_ENV
        [[ -d "$P" ]]
        #echo 'DEBEMAIL=InnovAnon-Inc@gmx.com' >> $GITHUB_ENV

    - name: Customize Source Package
      run: |
        tee -a                                   \
                 "$P/debian/configure.options" < \
        repo/.github/config/configure.options

        awk -f repo/.github/scripts/control.awk \
        "$P/debian/control"                   > \
        "$P/debian/control.new"
        mv -v                   \
        "$P/debian/control.new" \
        "$P/debian/control"

        # TODO rename .deb package
        # TODO conflicts with original packages -- slapd, etc.
    #- name: Dry run bump version and push tag
    #  id:   tag_version_dryrun
    #  uses: mathieudutour/github-tag-action@v6.1
    #  with:
    #    github_token: ${{ secrets.GITHUB_TOKEN }}
    #    dry_run: true
    #    tag_prefix:
    
    - name: Remove original source directory
      run: |
        T="$(ls openldap_*.orig.tar.*)"
        rm -v "$T"
        tar acpf "$T"           \
          --exclude-vcs         \
          --exclude-vcs-ignores \
          "$P"
        [[ -f "$T" ]]

    - name: Run dch
      working-directory: ${{ env.P }}
      run: |
        #dch -n back-sql
        dch -n back-sql --nmu
        #dch -n back-sql --package pgldap --version "$TEAMHACK_VERSION"
      #env:
      #  TEAMHACK_VERSION: ${{ steps.tag_version_dryrun.outputs.new_tag }}

    - name: Configure GPG Key
      run: |
        echo -n "$GPG_SIGNING_KEY" | gpg --import
        #echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}

    - name: Run debuild
      working-directory: ${{ env.P }}
      run: |
        DEB_BUILD_OPTIONS='ccache nocheck' \
        DEB_CONFIGURE_EXTRA_FLAGS=''       \
        DFSG_NONFREE=true                  \
        debuild                            \
          --no-lintian                     \
          -kD81CD473833607F8BEF1ECAA60F9747587CBBCD8 \
          -i

    - name: Create dist dir for Docker
      run: |
        mkdir -v                                           repo/dist/
        mv    -v *.deb *.dsc *.buildinfo *.changes *.build repo/dist/

    - name: Bump version and push tag
      id:   tag_version
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        fail_on_unmatched_files: true
        generate_release_notes: true
        files: |
          repo/dist/*
    #slapd_*.*.*+dfsg-*ubuntu*.*.*.*_amd64.deb
    #libldap-*.*-*_*.*.*+dfsg-*ubuntu*.*.*.*_amd64.deb
    #libldap-common_*.*.*+dfsg-*ubuntu*.*.*.*_all.deb
    #slapd-contrib_*.*.*+dfsg-*ubuntu*.*.*.*_amd64.deb
    #slapd-smbk5pwd_*.*.*+dfsg-*ubuntu*.*.*.*_all.deb
    #ldap-utils_*.*.*+dfsg-*ubuntu*.*.*.*_amd64.deb

    # TODO trigger build of ppa
    - name: Notify PPA
      uses: passeidireto/trigger-external-workflow-action@main
      env:
        PAYLOAD_AUTHOR: ${{ github.author }}
        PAYLOAD_REVISION: "3"
      with:
        repository: InnovAnon-Inc/ppa
        event: pgldap_update
        #github_pat: ${{ secrets.GITHUB_TOKEN }}
        github_pat: ${{ secrets.REPO_PAT }}
        #github_pat: ${{ secrets.pat_with_access }}

    # TODO new image
    - name: Authenticate with Docker Hub
      run: |
        docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build Docker Image
      working-directory: "repo"
      run: |
        docker build -t "innovanon/pgldap:$TEAMHACK_VERSION" .
      env:
        TEAMHACK_VERSION: ${{ steps.tag_version.outputs.new_tag }}

    - name: Tag Docker Image
      run: |
        docker tag      "innovanon/pgldap:$TEAMHACK_VERSION" \
                         innovanon/pgldap:latest
      env:
        TEAMHACK_VERSION: ${{ steps.tag_version.outputs.new_tag }}

    - name: Deploy Docker Image
      run: |
        docker push      innovanon/pgldap

